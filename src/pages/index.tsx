import type { GetStaticPropsContext, NextPage } from "next";
import Head from "next/head";
import puppeteer from "puppeteer";
import { CanvasContainer } from "../components/canvas/CanvasContainer";
import { TheHomePage } from "../components/homePage/TheHomePage";
import { configPuppeteer } from "../config/configPuppeteer";

const Home: NextPage = (props: any) => {
    return (
        <div>
            <Head>
                <title>Piotr Ko≈Çodziejczyk | Portfolio</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <CanvasContainer>
                <TheHomePage />
                {JSON.stringify(props.followers)}
            </CanvasContainer>

            <footer></footer>
        </div>
    );
};

export default Home;

export async function getStaticProps(context: GetStaticPropsContext) {
    const URLGithub = "https://github.com/Piotrko64";

    const browser = await puppeteer.launch(configPuppeteer);
    const page = await browser.newPage();
    await page.goto(URLGithub);

    const followersElementHTML = await page.$(
        ".Link--secondary.no-underline.no-wrap > span"
    );
    const dataFollowers = await page.evaluate(
        (element) => element?.innerHTML,
        followersElementHTML
    );

    const numberProjectsElementHTML = await page.$(
        ".UnderlineNav-body.width-full.p-responsive > a:nth-child(2) > span"
    );
    const dataProjects = await page.evaluate(
        (element) => element?.innerHTML,
        numberProjectsElementHTML
    );

    browser.close();
    return {
        props: {
            followers: +dataFollowers!,
            numberProjects: +dataProjects!,
        },
    };
}
